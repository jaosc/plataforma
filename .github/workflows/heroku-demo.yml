# This is a basic workflow to help you get started with Actions

name: Demo

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [demo]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    name: üöÄ Deploy
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: üöö Get latest code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - name: üÜî Configure git identity
        run: |
          git config --global user.email "contact@augustoicaro.com"
          git config --global user.name "Augusto Icaro Farias da Cunha"
      - name: üîë Parser Firebase API key
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: FIREBASE_APIKEY
          secret-value: ${{ secrets.FIREBASE_APIKEY }}
      - name: üîë Parser Firebase M Sender Id
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: FIREBASE_MSENDERID
          secret-value: ${{ secrets.FIREBASE_MSENDERID }}
      - name: üîë Parser Firebase App Id
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: FIREBASE_APPID
          secret-value: ${{ secrets.FIREBASE_APPID }}
      - name: üîë Parser Firebase M Id
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: FIREBASE_MID
          secret-value: ${{ secrets.FIREBASE_MID }}
      - name: üîë Parser MSAL Client Id
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: MSAL_CLIENT_ID
          secret-value: ${{ secrets.MSAL_CLIENT_ID }}
      - name: üîë Parser MSAL Rdirect URI
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: MSAL_REDIRECT_URI
          secret-value: ${{ secrets.MSAL_REDIRECT_URI_MAIN }}
      - name: üîë Parser MSAL Onedrive URI
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: ONEDRIVE_URI
          secret-value: ${{ secrets.ONEDRIVE_URI_LOCAL }}
      - name: üîë Parser Nortan API Token
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: API_TOKEN
          secret-value: ${{ secrets.API_TOKEN }}
      - name: üß© Use Node.js 12.x
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
      - name: üåê Install dependencies
        run: npm i
        env:
          DEBIAN_FRONTEND: noninteractive
      - name: üèóÔ∏è Build project
        run: npm run build
        env:
          FIREBASE_APIKEY: ${{secrets.FIREBASE_APIKEY}}
          FIREBASE_MSENDERID: ${{secrets.FIREBASE_MSENDERID}}
          FIREBASE_APPID: ${{secrets.FIREBASE_APPID}}
          FIREBASE_MID: ${{secrets.FIREBASE_MID}}
          MSAL_CLIENT_ID: ${{secrets.MSAL_CLIENT_ID}}
          MSAL_REDIRECT_URI: ${{secrets.MSAL_REDIRECT_URI_DEMO}}
          ONEDRIVE_URI: ${{secrets.ONEDRIVE_URI_LOCAL}}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          DEMO: ${{secrets.DEMO}}
      - name: üßπ Clean source files
        run: rm -rf src/app src/assets backend/src
      - name: üîÑ Commit changes
        run: |
          rm -f .gitignore
          echo '/node_modules' >> .gitignore
          git add -A
          git commit -m"Replace Secrets and build application"
        # You may pin to the exact commit or the version.
        # uses: AkhileshNS/heroku-deploy@cdd8fc68da4ad96ca0384cfa50d9e3eb2a6f6c1b
      - name: üèóÔ∏è Install prod packages and Deploy on Heroku
        uses: AkhileshNS/heroku-deploy@v3.6.8
        with:
          # This will be used for authentication. You can find it in your heroku homepage account settings
          heroku_api_key: ${{secrets.HEROKU_AUTH_TOKEN}}
          # Email that you use with heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          # The appname to use for deploying/updating
          heroku_app_name: nortan-demo
