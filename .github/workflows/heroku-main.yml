# This is a basic workflow to help you get started with Actions

name: Development

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - name: Configure git identity
        run: |
          git config --global user.email "contact@augustoicaro.com"
          git config --global user.name "Augusto Icaro Farias da Cunha"
      - name: Parser Firebase API key
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: FIREBASE_APIKEY
          secret-value: ${{ secrets.FIREBASE_APIKEY }}
      - name: Parser Firebase M Sender Id
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: FIREBASE_MSENDERID
          secret-value: ${{ secrets.FIREBASE_MSENDERID }}
      - name: Parser Firebase App Id
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: FIREBASE_APPID
          secret-value: ${{ secrets.FIREBASE_APPID }}
      - name: Parser Firebase M Id
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: FIREBASE_MID
          secret-value: ${{ secrets.FIREBASE_MID }}
      - name: Parser MSAL Client Id
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: MSAL_CLIENT_ID
          secret-value: ${{ secrets.MSAL_CLIENT_ID }}
      - name: Parser MSAL Rdirect URI
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: MSAL_REDIRECT_URI
          secret-value: ${{ secrets.MSAL_REDIRECT_URI_MAIN }}
      - name: Parser MSAL Onedrive URI
        uses: jwsi/secret-parser@v1
        with:
          filename: Dockerfile
          secret-name: ONEDRIVE_URI
          secret-value: ${{ secrets.ONEDRIVE_URI_LOCAL }}
      - name: Replacing secrets
        run: |
          git add -A
          git commit -m"Replace Secrets"
        # You may pin to the exact commit or the version.
        # uses: AkhileshNS/heroku-deploy@cdd8fc68da4ad96ca0384cfa50d9e3eb2a6f6c1b
      - uses: AkhileshNS/heroku-deploy@v3.6.8
        with:
          # This will be used for authentication. You can find it in your heroku homepage account settings
          heroku_api_key: ${{secrets.HEROKU_AUTH_TOKEN}}
          # Email that you use with heroku
          heroku_email: icaro.morpheus@gmail.com
          # The appname to use for deploying/updating
          heroku_app_name: nortan-dev
          # An optional buildpack to use when creating the heroku application
          #buildpack: # optional
          # The branch that you would like to deploy to Heroku
          # branch: main
          # Set this to true if you don't want to use --force when switching branches
          #dontuseforce: # optional, default is false
          # Will deploy using Dockerfile in project root.
          #usedocker: # optional, default is false
          # Type of heroku process (web, worker, etc). This option only makes sense when usedocker enabled
          #docker_heroku_process_type: # optional, default is web
          # A list of args to pass into the Docker build. This option only makes sense when usedocker enabled
          #docker_build_args: # optional
          # Set if your app is located in a subdirectory.
          #appdir: # optional, default is
          # A URL to which a healthcheck is performed (checks for 200 request)
          #healthcheck: # optional, default is
          # Value to check for when conducting healthcheck request
          #checkstring: # optional, default is
          # Time (in seconds) to wait before performing healthcheck
          #delay: # optional, default is 0
          # Contents of the Procfile to save and deploy
          #procfile: # optional, default is
          # When set to true this will attempt to rollback to the previous release if the healthcheck fails
          #rollbackonhealthcheckfailed: # optional, default is false
          # Path to an localized env file
          #env_file: # optional, default is
          # Set to true if you want the action to just login to Heroku and nothing else
          #justlogin: # optional, default is false
